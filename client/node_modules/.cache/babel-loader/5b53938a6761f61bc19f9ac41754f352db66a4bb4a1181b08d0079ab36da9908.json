{"ast":null,"code":"import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TopTitle from \"./TopTitle\";\nimport ThreadTitles from \"./ThreadTitles\";\nimport ThreadComments from \"./ThreadComments\";\nimport NewComments from \"./NewComments\";\nimport SideMenus from \"./SideMenus\";\nimport LogInForm from \"./LogInForm\";\nimport SignUpForm from \"./SignUpForm\";\nimport SuccessSignUp from \"./SuccessSignUp\";\nimport \"./main.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = /*#__PURE__*/createContext();\nexport const Titles = /*#__PURE__*/createContext();\n\n// ※serverのindex.jsでcommentsを投稿日時順に並べ替える\n// →同じtitleの投稿の数をtitlesに格納\nconst App = () => {\n  // // 投稿データ取得\n  // const [comments, setComments] = useState([]);\n  // useEffect(() => {\n  //   const url = \"http://localhost:3000/api/get/comments\";\n  //   axios\n  //     .get(url)\n  //     .then((res) => setComments(res.data))\n  //     .catch((error) => console.log(error));\n  // }, [setComments]);\n  // // タイトル一覧データ取得\n  // const [titles, setTitles] = useState([]);\n  // useEffect(() => {\n  //   const url = \"http://localhost:3000/api/get/titles\";\n  //   axios\n  //     .get(url)\n  //     .then((res) => setTitles(res.data))\n  //     .catch((error) => console.log(error));\n  // }, [setTitles]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","BrowserRouter","Routes","Route","axios","TopTitle","ThreadTitles","ThreadComments","NewComments","SideMenus","LogInForm","SignUpForm","SuccessSignUp","Fragment","_Fragment","jsxDEV","_jsxDEV","Comments","Titles","App","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TopTitle from \"./TopTitle\";\nimport ThreadTitles from \"./ThreadTitles\";\nimport ThreadComments from \"./ThreadComments\";\nimport NewComments from \"./NewComments\";\nimport SideMenus from \"./SideMenus\";\nimport LogInForm from \"./LogInForm\";\nimport SignUpForm from \"./SignUpForm\";\nimport SuccessSignUp from \"./SuccessSignUp\";\nimport \"./main.css\";\n\nexport const Comments = createContext();\nexport const Titles = createContext();\n\n// ※serverのindex.jsでcommentsを投稿日時順に並べ替える\n// →同じtitleの投稿の数をtitlesに格納\nconst App = () => {\n  // // 投稿データ取得\n  // const [comments, setComments] = useState([]);\n  // useEffect(() => {\n  //   const url = \"http://localhost:3000/api/get/comments\";\n  //   axios\n  //     .get(url)\n  //     .then((res) => setComments(res.data))\n  //     .catch((error) => console.log(error));\n  // }, [setComments]);\n  // // タイトル一覧データ取得\n  // const [titles, setTitles] = useState([]);\n  // useEffect(() => {\n  //   const url = \"http://localhost:3000/api/get/titles\";\n  //   axios\n  //     .get(url)\n  //     .then((res) => setTitles(res.data))\n  //     .catch((error) => console.log(error));\n  // }, [setTitles]);\n\n  return (\n    <>\n\n      {/* <SideMenus /> */}\n      {/* <TopTitle />\n      <a href=\"./newTitle.html\">新規スレッドを書く</a>\n      <br />\n      <Comments.Provider value={comments}>\n      <Titles.Provider value={titles}>\n        <ThreadTitles/>\n        <br />\n        <ThreadComments title=\"あの件について\" count=\"4\" />\n        <ThreadComments title=\"ちいかわを語る\" count=\"4\" />\n        <ThreadComments title=\"おにぎりの握り方\" count=\"4\" />\n      </Titles.Provider>\n      </Comments.Provider>\n      <NewComments title=\"ちいかわを語る\" /> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACjE,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,YAAY;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,OAAO,MAAMC,QAAQ,gBAAGjB,aAAa,CAAC,CAAC;AACvC,OAAO,MAAMkB,MAAM,gBAAGlB,aAAa,CAAC,CAAC;;AAErC;AACA;AACA,MAAMmB,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA,CAAAF,SAAA,mBAgBE,CAAC;AAEP,CAAC;AAAAM,EAAA,GAvCKD,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}