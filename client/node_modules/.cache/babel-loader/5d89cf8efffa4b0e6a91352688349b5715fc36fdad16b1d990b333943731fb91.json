{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport Axios from \"axios\";\n// import useTitles from \"./useTitles\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreadComments(board_id) {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/api/get/comments\").then(response => {\n      setComments(response.data);\n    }).then(Object.values(comments).filter(val => {\n      return val.board_id = 1;\n    }));\n  }, []);\n\n  // Object.values(comments).sort((a,b) => {\n  //   return a.post_date - b.post_date\n  // })\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ThreadComments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = ThreadComments;\nexport default ThreadComments;\nvar _c;\n$RefreshReg$(_c, \"ThreadComments\");","map":{"version":3,"names":["useState","useEffect","Axios","Fragment","_Fragment","jsxDEV","_jsxDEV","ThreadComments","board_id","_s","comments","setComments","get","then","response","data","Object","values","filter","val","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/ThreadComments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./main.css\";\r\nimport Axios from \"axios\";\r\n// import useTitles from \"./useTitles\";\r\n\r\nfunction ThreadComments(board_id) {\r\n  const [comments, setComments] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3000/api/get/comments\")\r\n      .then((response) => {\r\n        setComments(response.data);\r\n      })\r\n      .then(\r\n        Object.values(comments).filter((val) => {\r\n          return (\r\n            val.board_id = 1\r\n          );\r\n        })\r\n      );\r\n  }, []);\r\n\r\n  // Object.values(comments).sort((a,b) => {\r\n  //   return a.post_date - b.post_date\r\n  // })\r\n  return (\r\n    <>\r\n      {/* {Object.values(comments).map((val, index) => {\r\n        return <span key={index}>{val.title}(),</span>\r\n      })} */}\r\n      {/* <h2>\r\n        No{Object.values(comments).id} {Object.values(comments).title}\r\n      </h2>\r\n      <h3>1 名前：{Object.values(comments)}</h3>\r\n      {Object.values(comments).forEach((val) => {})} */}\r\n    </>\r\n  );\r\n}\r\nexport default ThreadComments;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACU,GAAG,CAAC,wCAAwC,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDF,IAAI,CACHG,MAAM,CAACC,MAAM,CAACP,QAAQ,CAAC,CAACQ,MAAM,CAAEC,GAAG,IAAK;MACtC,OACEA,GAAG,CAACX,QAAQ,GAAG,CAAC;IAEpB,CAAC,CACH,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA,oBACEF,OAAA,CAAAF,SAAA,mBASE,CAAC;AAEP;AAACK,EAAA,CA/BQF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAgCvB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}