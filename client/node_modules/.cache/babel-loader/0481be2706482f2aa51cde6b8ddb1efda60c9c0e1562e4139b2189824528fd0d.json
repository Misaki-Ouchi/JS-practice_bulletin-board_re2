{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\practice\\\\\\u5B9F\\u52D9\\u8AB2\\u984C\\\\\\u7C21\\u6613\\u30ED\\u30B0\\u30A4\\u30F3\\u6A5F\\u80FD\\u4ED8\\u304D\\u63B2\\u793A\\u677F\\u30B5\\u30A4\\u30C8\\u5236\\u4F5C\\u8AB2\\u984C\\\\client\\\\src\\\\ThreadsAreas.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { DataList } from \"./App\";\nimport AThreadsArea from \"./AThreadsArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadsAreas = props => {\n  _s();\n  const dataList = useContext(DataList);\n\n  // dataListに{タイトルデータ：コメント一覧}を格納\n  for (let i = 0; i < titles.length; i++) {\n    commentsList[i] = {\n      titleData: titles[i],\n      comments: []\n    };\n    for (let j = 0; j < comments.length; j++) {\n      if (titles[i].id === comments[j].title_id) {\n        commentsList[i].comments.push(comments[j]);\n      }\n    }\n  }\n  console.log(commentsList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threadWrap\",\n      children: commentsList.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threadsArea\",\n          children: /*#__PURE__*/_jsxDEV(AThreadsArea, {\n            title: value.titleData.title,\n            comments: value.comments,\n            count: props.count,\n            comment_count: value.titleData.count,\n            title_id: value.titleData.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadsAreas, \"2zxxjFdIpJlZI0U4EM/GCBWD/8s=\");\n_c = ThreadsAreas;\nexport default ThreadsAreas;\nvar _c;\n$RefreshReg$(_c, \"ThreadsAreas\");","map":{"version":3,"names":["useContext","DataList","AThreadsArea","jsxDEV","_jsxDEV","ThreadsAreas","props","_s","dataList","i","titles","length","commentsList","titleData","comments","j","id","title_id","push","console","log","className","children","map","value","index","title","count","comment_count","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/ThreadsAreas.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { DataList } from \"./App\";\r\nimport AThreadsArea from \"./AThreadsArea\";\r\n\r\nconst ThreadsAreas = (props) => {\r\n  const dataList = useContext(DataList);\r\n\r\n  // dataListに{タイトルデータ：コメント一覧}を格納\r\n  for (let i = 0; i < titles.length; i++) {\r\n    commentsList[i] = { titleData: titles[i], comments: [] };\r\n    for (let j = 0; j < comments.length; j++) {\r\n      if (titles[i].id === comments[j].title_id) {\r\n        commentsList[i].comments.push(comments[j]);\r\n      }\r\n    }\r\n  }\r\n  console.log(commentsList)\r\n\r\n  return (\r\n    <div className=\"thread\">\r\n      <div className=\"threadWrap\">\r\n          {commentsList.map((value, index) => {\r\n            return (\r\n              <div key={index} className=\"threadsArea\">\r\n                <AThreadsArea\r\n                  title={value.titleData.title}\r\n                  comments={value.comments}\r\n                  count={props.count}\r\n                  comment_count={value.titleData.count}\r\n                  title_id={value.titleData.id}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsAreas;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,UAAU,CAACC,QAAQ,CAAC;;EAErC;EACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IACtCG,YAAY,CAACH,CAAC,CAAC,GAAG;MAAEI,SAAS,EAAEH,MAAM,CAACD,CAAC,CAAC;MAAEK,QAAQ,EAAE;IAAG,CAAC;IACxD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACH,MAAM,EAAEI,CAAC,EAAE,EAAE;MACxC,IAAIL,MAAM,CAACD,CAAC,CAAC,CAACO,EAAE,KAAKF,QAAQ,CAACC,CAAC,CAAC,CAACE,QAAQ,EAAE;QACzCL,YAAY,CAACH,CAAC,CAAC,CAACK,QAAQ,CAACI,IAAI,CAACJ,QAAQ,CAACC,CAAC,CAAC,CAAC;MAC5C;IACF;EACF;EACAI,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;EAEzB,oBACER,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBlB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBV,YAAY,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAClC,oBACErB,OAAA;UAAiBiB,SAAS,EAAC,aAAa;UAAAC,QAAA,eACtClB,OAAA,CAACF,YAAY;YACXwB,KAAK,EAAEF,KAAK,CAACX,SAAS,CAACa,KAAM;YAC7BZ,QAAQ,EAAEU,KAAK,CAACV,QAAS;YACzBa,KAAK,EAAErB,KAAK,CAACqB,KAAM;YACnBC,aAAa,EAAEJ,KAAK,CAACX,SAAS,CAACc,KAAM;YACrCV,QAAQ,EAAEO,KAAK,CAACX,SAAS,CAACG;UAAG;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC,GAPMP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}