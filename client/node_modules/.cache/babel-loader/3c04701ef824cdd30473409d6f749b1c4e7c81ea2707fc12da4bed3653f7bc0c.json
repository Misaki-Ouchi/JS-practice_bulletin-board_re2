{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\practice\\\\\\u5B9F\\u52D9\\u8AB2\\u984C\\\\\\u7C21\\u6613\\u30ED\\u30B0\\u30A4\\u30F3\\u6A5F\\u80FD\\u4ED8\\u304D\\u63B2\\u793A\\u677F\\u30B5\\u30A4\\u30C8\\u5236\\u4F5C\\u8AB2\\u984C\\\\client\\\\src\\\\parts\\\\links&btns\\\\ThreadBtnLinks.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ShowNewComments from \"../links&btns/ShowNewComments\";\nimport NewComments from \"../forms/NewComments\";\nimport ReadAllLink from \"../links&btns/ReadAllLink\";\nimport LikesTitleBtn from \"../links&btns/LikesTitleBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThreadBtnLinks = props => {\n  _s();\n  const [isClick, setIsClick] = useState(false);\n  const handleClick = () => {\n    setIsClick(!isClick);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threadBtnLinks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(),\n        children: \"\\u66F8\\u304D\\u8FBC\\u3080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), props.login && /*#__PURE__*/_jsxDEV(LikesTitleBtn, {\n        title_id: props.title_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ReadAllLink, {\n        title_id: props.title_id,\n        comment_count: props.comment_count,\n        comments: props.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), \")}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isClick && /*#__PURE__*/_jsxDEV(NewComments, {\n      title_id: props.title_id,\n      title: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(ThreadBtnLinks, \"8fpkRQrdGGAYKNE6tk5KdUqo3Wo=\");\n_c = ThreadBtnLinks;\nexport default ThreadBtnLinks;\nvar _c;\n$RefreshReg$(_c, \"ThreadBtnLinks\");","map":{"version":3,"names":["useState","ShowNewComments","NewComments","ReadAllLink","LikesTitleBtn","jsxDEV","_jsxDEV","Fragment","_Fragment","ThreadBtnLinks","props","_s","isClick","setIsClick","handleClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","login","title_id","comment_count","comments","title","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/parts/links&btns/ThreadBtnLinks.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ShowNewComments from \"../links&btns/ShowNewComments\";\r\nimport NewComments from \"../forms/NewComments\";\r\nimport ReadAllLink from \"../links&btns/ReadAllLink\";\r\nimport LikesTitleBtn from \"../links&btns/LikesTitleBtn\";\r\n\r\nconst ThreadBtnLinks = (props) => {\r\n  const [isClick, setIsClick] = useState(false);\r\n  const handleClick = () => {\r\n    setIsClick(!isClick);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"threadBtnLinks\">\r\n        <button onClick={() => handleClick()}>書き込む</button>\r\n        {props.login && <LikesTitleBtn title_id={props.title_id} />}\r\n        {/* {props.readAll && ( */}\r\n          <ReadAllLink\r\n            title_id={props.title_id}\r\n          comment_count={props.comment_count}\r\n          comments={props.comments}\r\n          />\r\n         )}\r\n      </div>\r\n      {isClick && <NewComments title_id={props.title_id} title={props.title} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThreadBtnLinks;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BT,OAAA;QAAQW,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,CAAE;QAAAC,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClDX,KAAK,CAACY,KAAK,iBAAIhB,OAAA,CAACF,aAAa;QAACmB,QAAQ,EAAEb,KAAK,CAACa;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzDf,OAAA,CAACH,WAAW;QACVoB,QAAQ,EAAEb,KAAK,CAACa,QAAS;QAC3BC,aAAa,EAAEd,KAAK,CAACc,aAAc;QACnCC,QAAQ,EAAEf,KAAK,CAACe;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,MAEN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLT,OAAO,iBAAIN,OAAA,CAACJ,WAAW;MAACqB,QAAQ,EAAEb,KAAK,CAACa,QAAS;MAACG,KAAK,EAAEhB,KAAK,CAACgB;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzE,CAAC;AAEP,CAAC;AAACV,EAAA,CAtBIF,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}