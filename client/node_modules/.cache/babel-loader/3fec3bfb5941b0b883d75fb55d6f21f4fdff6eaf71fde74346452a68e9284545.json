{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\practice\\\\\\u5B9F\\u52D9\\u8AB2\\u984C\\\\\\u7C21\\u6613\\u30ED\\u30B0\\u30A4\\u30F3\\u6A5F\\u80FD\\u4ED8\\u304D\\u63B2\\u793A\\u677F\\u30B5\\u30A4\\u30C8\\u5236\\u4F5C\\u8AB2\\u984C\\\\client\\\\src\\\\ThreadComments.js\";\nimport { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport axios from \"axios\";\n// import useTitles from \"./useTitles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/api/get/\" + \"comments\";\nlet aaa = [];\nfunction ThreadComments(board_id) {\n  // const [comments, setComments] = useState([]);\n  // useEffect(() => {\n  //   axios.get(url)\n  //   .then((response) => setComments(response.data))\n  // }, []);\n  const getComments = async () => {\n    return await axios.get(url);\n  };\n  const getData = async () => {\n    const comments = await getComments();\n    // const newComments = await comments.filter(val => board_id = 1)\n    let data = [];\n    await comments.data.forEach(val => {\n      data.push({\n        id: val.id,\n        title: val.title,\n        user_name: val.user_name,\n        board_id: val.board_id\n      });\n    });\n    console.log(data);\n    return aaa = data;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Object.values(comments).map((val, index) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [val.title, \"(),\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"No\", Object.values(comments).id, \" \", Object.values(comments).title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"1 \\u540D\\u524D\\uFF1A\", Object.values(comments)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Object.values(comments).forEach(val => {})]\n  }, void 0, true);\n}\n_c = ThreadComments;\nexport default ThreadComments;\nvar _c;\n$RefreshReg$(_c, \"ThreadComments\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","url","aaa","ThreadComments","board_id","getComments","get","getData","comments","data","forEach","val","push","id","title","user_name","console","log","children","Object","values","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/ThreadComments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./main.css\";\r\nimport axios from \"axios\";\r\n// import useTitles from \"./useTitles\";\r\n\r\nconst url = \"http://localhost:3000/api/get/\" + \"comments\"\r\nlet aaa = []\r\nfunction ThreadComments(board_id) {\r\n  // const [comments, setComments] = useState([]);\r\n  // useEffect(() => {\r\n  //   axios.get(url)\r\n  //   .then((response) => setComments(response.data))\r\n  // }, []);\r\n  const getComments = async () => {\r\n    return await axios.get(url)\r\n  }\r\n  const getData = async () => {\r\n    const comments = await getComments()\r\n    // const newComments = await comments.filter(val => board_id = 1)\r\n    let data = []\r\n    await comments.data.forEach(val => {\r\n      data.push({\r\n        id: val.id,\r\n        title: val.title,\r\n        user_name: val.user_name,\r\n        board_id: val.board_id\r\n      })\r\n    })\r\n    console.log(data)\r\n    return aaa = data\r\n  }\r\n  return (\r\n    <>\r\n      {Object.values(comments).map((val, index) => {\r\n        return <span key={index}>{val.title}(),</span>\r\n      })}\r\n      <h2>\r\n        No{Object.values(comments).id} {Object.values(comments).title}\r\n      </h2>\r\n      <h3>1 名前：{Object.values(comments)}</h3>\r\n      {Object.values(comments).forEach((val) => {})}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ThreadComments;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,GAAG,GAAG,gCAAgC,GAAG,UAAU;AACzD,IAAIC,GAAG,GAAG,EAAE;AACZ,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAChC;EACA;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,OAAO,MAAMT,KAAK,CAACU,GAAG,CAACL,GAAG,CAAC;EAC7B,CAAC;EACD,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAAC,CAAC;IACpC;IACA,IAAII,IAAI,GAAG,EAAE;IACb,MAAMD,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,IAAI;MACjCF,IAAI,CAACG,IAAI,CAAC;QACRC,EAAE,EAAEF,GAAG,CAACE,EAAE;QACVC,KAAK,EAAEH,GAAG,CAACG,KAAK;QAChBC,SAAS,EAAEJ,GAAG,CAACI,SAAS;QACxBX,QAAQ,EAAEO,GAAG,CAACP;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFY,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,OAAOP,GAAG,GAAGO,IAAI;EACnB,CAAC;EACD,oBACEX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,GACGC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC,CAACa,GAAG,CAAC,CAACV,GAAG,EAAEW,KAAK,KAAK;MAC3C,oBAAOxB,OAAA;QAAAoB,QAAA,GAAmBP,GAAG,CAACG,KAAK,EAAC,KAAG;MAAA,GAArBQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IAChD,CAAC,CAAC,eACF5B,OAAA;MAAAoB,QAAA,GAAI,IACA,EAACC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC,CAACK,EAAE,EAAC,GAAC,EAACM,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC,CAACM,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACL5B,OAAA;MAAAoB,QAAA,GAAI,sBAAK,EAACC,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtCP,MAAM,CAACC,MAAM,CAACZ,QAAQ,CAAC,CAACE,OAAO,CAAEC,GAAG,IAAK,CAAC,CAAC,CAAC;EAAA,eAC7C,CAAC;AAEP;AAACgB,EAAA,GApCQxB,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}