{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\practice\\\\\\u5B9F\\u52D9\\u8AB2\\u984C\\\\\\u7C21\\u6613\\u30ED\\u30B0\\u30A4\\u30F3\\u6A5F\\u80FD\\u4ED8\\u304D\\u63B2\\u793A\\u677F\\u30B5\\u30A4\\u30C8\\u5236\\u4F5C\\u8AB2\\u984C\\\\client\\\\src\\\\ThreadsAreas.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Titles } from \"./App\";\nimport { Comments } from \"./App\";\nimport ThreadTitle from \"./ThreadTitle\";\nimport ThreadComments from \"./ThreadComments\";\nimport ShowNewComments from \"./ShowNewComments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadsAreas = props => {\n  _s();\n  const titles = useContext(Titles);\n  const comments = useContext(Comments);\n  const commentsList = [];\n  for (let i = 0; i < titles.length; i++) {\n    commentsList.push([]);\n    for (let j = 0; j < comments.length; j++) {\n      console.log(comments[j].title_id);\n      if (titles[i].id === comments[j].title_id) {\n        console.log(comments[j].title_id);\n        console.log(titles[i].id);\n        commentsList[i].push(comments[j]);\n      }\n    }\n  }\n  console.log(commentsList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"threadWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"threadsAreas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadsAreas, \"nPWZsP15rlCFnoicfxyDYVTVAMI=\");\n_c = ThreadsAreas;\nexport default ThreadsAreas;\nvar _c;\n$RefreshReg$(_c, \"ThreadsAreas\");","map":{"version":3,"names":["useContext","Titles","Comments","ThreadTitle","ThreadComments","ShowNewComments","jsxDEV","_jsxDEV","ThreadsAreas","props","_s","titles","comments","commentsList","i","length","push","j","console","log","title_id","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/ThreadsAreas.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Titles } from \"./App\";\r\nimport { Comments } from \"./App\";\r\nimport ThreadTitle from \"./ThreadTitle\";\r\nimport ThreadComments from \"./ThreadComments\";\r\nimport ShowNewComments from \"./ShowNewComments\";\r\n\r\nconst ThreadsAreas = (props) => {\r\n  const titles = useContext(Titles);\r\n  const comments = useContext(Comments);\r\n  const commentsList = []\r\n  for (let i = 0; i < titles.length; i++) {\r\n    commentsList.push([])\r\n    for (let j = 0; j < comments.length; j++) {\r\n      console.log(comments[j].title_id)\r\n      if (titles[i].id === comments[j].title_id) {\r\n        console.log(comments[j].title_id)\r\n        console.log(titles[i].id)\r\n        commentsList[i].push(comments[j])\r\n      }\r\n    }\r\n  }\r\n  console.log(commentsList)\r\n\r\n  return (\r\n    <div className=\"thread\">\r\n      <div className=\"threadWrap\">\r\n        <div className=\"threadsAreas\">\r\n          {/* {titles.map((title, idxT) => {\r\n            return (\r\n              <div key={idxT}>\r\n                <ThreadTitle title={title.title} />\r\n                {\r\n                  comments.map((comment, index) => {\r\n                    return (\r\n                      title.id === comment.title_id && (\r\n                        <ThreadComments\r\n                          comments={commentsList}\r\n                          count={props.count}\r\n                        />\r\n                      )\r\n                    )\r\n                  })\r\n                }\r\n                <ShowNewComments title_id={title.id} title={title.title} />\r\n              </div>\r\n            );\r\n          })} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsAreas;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,MAAM,GAAGX,UAAU,CAACC,MAAM,CAAC;EACjC,MAAMW,QAAQ,GAAGZ,UAAU,CAACE,QAAQ,CAAC;EACrC,MAAMW,YAAY,GAAG,EAAE;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtCD,YAAY,CAACG,IAAI,CAAC,EAAE,CAAC;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACG,MAAM,EAAEE,CAAC,EAAE,EAAE;MACxCC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACK,CAAC,CAAC,CAACG,QAAQ,CAAC;MACjC,IAAIT,MAAM,CAACG,CAAC,CAAC,CAACO,EAAE,KAAKT,QAAQ,CAACK,CAAC,CAAC,CAACG,QAAQ,EAAE;QACzCF,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACK,CAAC,CAAC,CAACG,QAAQ,CAAC;QACjCF,OAAO,CAACC,GAAG,CAACR,MAAM,CAACG,CAAC,CAAC,CAACO,EAAE,CAAC;QACzBR,YAAY,CAACC,CAAC,CAAC,CAACE,IAAI,CAACJ,QAAQ,CAACK,CAAC,CAAC,CAAC;MACnC;IACF;EACF;EACAC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EAEzB,oBACEN,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBhB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBhB,OAAA;QAAKe,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}