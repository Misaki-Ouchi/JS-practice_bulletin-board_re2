{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\practice\\\\\\u5B9F\\u52D9\\u8AB2\\u984C\\\\\\u7C21\\u6613\\u30ED\\u30B0\\u30A4\\u30F3\\u6A5F\\u80FD\\u4ED8\\u304D\\u63B2\\u793A\\u677F\\u30B5\\u30A4\\u30C8\\u5236\\u4F5C\\u8AB2\\u984C\\\\client\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Axios from \"axios\";\nimport \"./main.css\";\nimport App from './App';\nimport TopTitle from './TopTitle';\nimport AllThreads from './AllThreads';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(TopTitle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    href: \"/\",\n    children: \"\\u65B0\\u898F\\u30B9\\u30EC\\u30C3\\u30C9\\u3092\\u66F8\\u304F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AllThreads, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this));\nconst list = () => {\n  _s();\n  const [threads, setThreads] = useState([]);\n\n  // 副作用のある関数を遅延読み込み useEffect(副作用関数, [実行のタイミング])\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/api/get/threads\").then(response => {\n      setThreads(response.data);\n    });\n    // 空の配列：初回のみ実行。第二引数の配列を省略するとレンだリングの度に毎回実行され、無限ループになる\n    // 特定のステート(countなど)を入れると、それ(count)の更新時のみ実行\n  }, []);\n  return threads;\n};\n_s(list, \"sq9hmC9Ec1RKesUYep9W9DPjbrM=\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","Axios","App","TopTitle","AllThreads","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","href","list","_s","threads","setThreads","get","then","response","data"],"sources":["C:/xampp/htdocs/practice/実務課題/簡易ログイン機能付き掲示板サイト制作課題/client/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Axios from \"axios\";\nimport \"./main.css\";\nimport App from './App';\nimport TopTitle from './TopTitle';\nimport AllThreads from './AllThreads';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <TopTitle />\n    <button href=\"/\">新規スレッドを書く</button>\n    <AllThreads />\n    <App />\n  </React.StrictMode>\n);\n\nconst list = () => {\n  const [threads, setThreads] = useState([]);\n\n  // 副作用のある関数を遅延読み込み useEffect(副作用関数, [実行のタイミング])\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/api/get/threads\").then((response) => {\n      setThreads(response.data);\n    });\n    // 空の配列：初回のみ実行。第二引数の配列を省略するとレンだリングの度に毎回実行され、無限ループになる\n    // 特定のステート(countなど)を入れると、それ(count)の更新時のみ実行\n  }, []);\n  return threads\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACT,KAAK,CAACe,UAAU;EAAAC,QAAA,gBACfP,OAAA,CAACH,QAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACZX,OAAA;IAAQY,IAAI,EAAC,GAAG;IAAAL,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eACnCX,OAAA,CAACF,UAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACdX,OAAA,CAACJ,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAED,MAAME,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACsB,GAAG,CAAC,uCAAuC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACpEH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;IACF;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAOL,OAAO;AAChB,CAAC;AAAAD,EAAA,CAZKD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}